1. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Values.namespace }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "geist-helm.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Values.namespace }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Values.namespace }} svc -w {{ include "geist-helm.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Values.namespace }} {{ include "geist-helm.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Values.namespace }} -l "app.kubernetes.io/name={{ include "geist-helm.name" . }},app.kubernetes.io/instance={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  export CONTAINER_PORT=$(kubectl get pod --namespace {{ .Values.namespace }} $POD_NAME -o jsonpath="{.spec.containers[0].ports[0].containerPort}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Values.namespace }} port-forward $POD_NAME 8080:$CONTAINER_PORT
{{- end }}

2. Your Geist AI services are now deployed:

   API Service: https://api.geist.im
   Inference Service: https://inference.geist.im  
   Embeddings Service: https://embeddings.geist.im

3. To check the status of your deployments:
   kubectl get deployments --namespace {{ .Values.namespace }}
   kubectl get services --namespace {{ .Values.namespace }}
   kubectl get ingress --namespace {{ .Values.namespace }}

4. To view logs:
   kubectl logs -f deployment/{{ .Values.api.name }} --namespace {{ .Values.namespace }}
   kubectl logs -f deployment/{{ .Values.inference.name }} --namespace {{ .Values.namespace }}
   kubectl logs -f deployment/{{ .Values.embeddings.name }} --namespace {{ .Values.namespace }}
