# You are editing:
# PRODUCTION
namespace: production

# API Service (api.geist.im)
api:
  name: geist-api
  replicas: 2
  image:
    repository: geist/api
    pullPolicy: Always
    tag: production-latest
  service:
    name: geist-api
    port: 8000
  resources:
    limits:
      cpu: "2000m"
      memory: "4Gi"
    requests:
      cpu: "1000m"
      memory: "2Gi"
  env:
    NODE_ENV: production
    PORT: 8000
    API_URL: https://api.geist.im
    INFERENCE_URL: https://inference.geist.im
    EMBEDDINGS_URL: https://embeddings.geist.im

# Inference Service (inference.geist.im)
inference:
  name: geist-inference
  replicas: 2
  image:
    repository: geist/inference
    pullPolicy: Always
    tag: production-latest
  service:
    name: geist-inference
    port: 8001
  resources:
    limits:
      cpu: "4000m"
      memory: "8Gi"
    requests:
      cpu: "2000m"
      memory: "4Gi"
  env:
    NODE_ENV: production
    PORT: 8001
    API_URL: https://api.geist.im
    INFERENCE_URL: https://inference.geist.im
    EMBEDDINGS_URL: https://embeddings.geist.im

# Embeddings Service (embeddings.geist.im)
embeddings:
  name: geist-embeddings
  replicas: 2
  image:
    repository: geist/embeddings
    pullPolicy: Always
    tag: production-latest
  service:
    name: geist-embeddings
    port: 8002
  resources:
    limits:
      cpu: "3000m"
      memory: "6Gi"
    requests:
      cpu: "1500m"
      memory: "3Gi"
  env:
    NODE_ENV: production
    PORT: 8002
    API_URL: https://api.geist.im
    INFERENCE_URL: https://inference.geist.im
    EMBEDDINGS_URL: https://embeddings.geist.im

# Ingress Configuration
ingress:
  ingressClassName: nginx
  name: geist-production
  api:
    name: geist-api-ingress
    host: api.geist.im
  inference:
    name: geist-inference-ingress
    host: inference.geist.im
  embeddings:
    name: geist-embeddings-ingress
    host: embeddings.geist.im
